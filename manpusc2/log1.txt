Thread 0
Execution stack:
(int v;(v=2;print(v)))
SymTable:
Out:
FileTable:
Memory heap:
Thread 0
Execution stack:
int v
(v=2;print(v))
SymTable:
Out:
FileTable:
Memory heap:
Thread 0
Execution stack:
(Ref(int) v1;(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
 
( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
wH(v2,null)
unlock(q)
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
(Ref(int) v1;(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 1
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> -1
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
 
( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
wH(v2,null)
unlock(q)
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> 3
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> 3
Thread 3
Execution stack:
unlock(q)
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> 3
Thread 0
Execution stack:
 
(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
lock(x)
(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 0
Execution stack:
print(rH(v1))
(unlock(x);(lock(q);(print(rH(v2));unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 0
Execution stack:
(unlock(x);(lock(q);(print(rH(v2));unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
20
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 2
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
20
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 3
Execution stack:
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
20
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 0
2 -> -1
Thread 0
Execution stack:
(string varf;(varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in";(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
string varf
(varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in";(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
string varf
(varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in";(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in";(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))))
SymTable:
varf->""
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in";(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))))
SymTable:
varf->""
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))))
SymTable:
varf->""
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
varf="C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))))
SymTable:
varf->""
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(openFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
openFile(varf)
(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
openFile(varf)
(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
int varc
(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
int varc
(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf)))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
readFile(varf,varc)
(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
readFile(varf,varc)
(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(print(varc);(readFile(varf,varc);(print(varc);closeFile(varf))))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
print(varc)
(readFile(varf,varc);(print(varc);closeFile(varf)))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
print(varc)
(readFile(varf,varc);(print(varc);closeFile(varf)))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(readFile(varf,varc);(print(varc);closeFile(varf)))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(readFile(varf,varc);(print(varc);closeFile(varf)))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
readFile(varf,varc)
(print(varc);closeFile(varf))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
readFile(varf,varc)
(print(varc);closeFile(varf))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(print(varc);closeFile(varf))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
(print(varc);closeFile(varf))
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
print(varc)
closeFile(varf)
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
print(varc)
closeFile(varf)
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
closeFile(varf)
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
closeFile(varf)
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
0
FileTable:
"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"->java.io.BufferedReader@29389f2d
Memory heap:
LockTable:
Thread 0
Execution stack:
SymTable:
varf->"C:\Users\HP\IdeaProjects\manpusc2\src\main\java\test.in"
varc->0
Out:
0
0
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v1;(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v1
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(Ref(int) v2;(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
Ref(int) v2
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int x;(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int x
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(int q;(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
int q
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v1, 20);(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
New(v1, 20)
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(0,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(New(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
New(v2, 30)
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(0,int)
Out:
FileTable:
Memory heap:
1->20
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(newLock(x);(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
newLock(x)
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->0
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
fork((fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x)))))
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(newLock(q);(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
(fork((lock(x);(wH(v1,null);unlock(x))));(lock(x);(wH(v1,null);unlock(x))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
newLock(q)
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 1
Execution stack:
fork((lock(x);(wH(v1,null);unlock(x))))
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
(fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))));( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
(lock(x);(wH(v1,null);unlock(x)))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
fork((fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q)))))
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(fork((lock(q);(wH(v2,null);unlock(q))));(lock(q);(wH(v2,null);unlock(q))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
fork((lock(q);(wH(v2,null);unlock(q))))
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
( ;( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 1
Execution stack:
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 3
Execution stack:
(lock(q);(wH(v2,null);unlock(q)))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 1
Execution stack:
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
 
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 2
Execution stack:
lock(x)
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 3
Execution stack:
lock(q)
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> -1
2 -> -1
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
( ;( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
(wH(v1,null);unlock(x))
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
(wH(v2,null);unlock(q))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 0
Execution stack:
 
( ;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 2
Execution stack:
wH(v1,null)
unlock(x)
SymTable:
q->0
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
Thread 3
Execution stack:
wH(v2,null)
unlock(q)
SymTable:
q->2
x->1
v1->(1,int)
v2->(2,int)
Out:
FileTable:
Memory heap:
1->20
2->30
LockTable:
1 -> 2
2 -> 3
